name: WezTerm Windows Alt Icon Builds

on:
  workflow_dispatch:
    inputs:
      debugging:
        type: boolean
        required: false
        default: false

jobs:
  get-wezterm:
    runs-on: ubuntu-latest
    outputs:
      wezterm-version: ${{ steps.get-wezterm-zip.wezterm_version }}
      wezterm-folder: ${{ steps.get-wezterm-zip.wezterm_folder }}
    steps:
      - name: Get Dependencies
        run: |
          sudo apt update
          sudo apt install ripgrep
      - name: Get WezTerm Windows Zip
        id: get-wezterm-zip
        run: |
          export wezterm_version="$(
            curl -sv "https://github.com/wezterm/wezterm/releases/latest" 2>&1 \
            | rg "^< location:.*?/tag/([\w-]*)" --replace '$1' \
            | tr -d '\n' \
            | tr -d '\r'
          )"

          echo "wezterm_version=$wezterm_version"
          echo "wezterm_version=$wezterm_version" >> $GITHUB_OUTPUT

          export wezterm_folder="WezTerm-windows-${wezterm_version}"
          echo "wezterm_folder=$wezterm_folder"

          export url="https://github.com/wezterm/wezterm/releases/download/${wezterm_version}/${wezterm_folder}.zip"
          echo "url=$url"

          curl -Lso temp.zip "$url"

          unzip temp.zip
          mv $wezterm_folder wezterm
          rm temp.zip

      - uses: actions/upload-artifact@v4
        with:
          name: wezterm.zip
          path: wezterm
          retention-days: 2

  icon-matrix:
    needs: get-wezterm
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: "Checkout Local Repo"
        uses: actions/checkout@v4

      - id: set-matrix
        shell: ruby {0}
        run: |
          require 'json'

          matrix = Dir.glob('alt-icons/wezterm-icon-*.png').map do |file|
            {
              'file' => file,
              'name' => File.basename(file)
                          .sub(/^wezterm-icon-/, '')
                          .sub(/\.png$/, '')
            }
          end

          File.open(ENV['GITHUB_OUTPUT'], 'a') do |f|
            f.puts "matrix=#{matrix.to_json}"
          end

      - id: upload-alt-icons
        uses: actions/upload-artifact@v4
        with:
          name: alt-icons.zip
          path: alt-icons
          retention-days: 2

  patch-wezterm-icon:
    needs:
      - get-wezterm
      - icon-matrix
    strategy:
      matrix:
        icon: ${{ fromJson(needs.icon-matrix.outputs.matrix) }}
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wezterm.zip
          path: wezterm

      - uses: actions/download-artifact@v4
        with:
          name: alt-icons.zip
          path: alt-icons

      - name: "Remote Debugging"
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debugging }}
        with:
          detached: true

      - name: "Install Dependencies"
        shell: pwsh
        run: |
          Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
          scoop bucket add extras

          scoop install imagemagick rcedit

      - name: "Create .ico file"
        shell: bash
        run: |
          export image="${{ matrix.icon.file }}"
          magick -background transparent -define icon:auto-resize="16,32,48,64,96,128,256" "$image" "${image/png/ico}"

      - name: "Create Zip Package with ${{ matrix.icon.name }}"
        id: zip-windows-package
        shell: pwsh
        run: |
          # Import the wezterm_version from the previous step's output
          $wezterm_version = "${{ needs.get-wezterm.outputs.wezterm-version }}"
          Write-Host "wezterm_version = $wezterm_version"

          # Set extracted folder name based on version
          $extractedFolder = "WezTerm-windows-$wezterm_version"

          $iconFileName = "${{ matrix.icon.file }}"
          if ($iconFileName -match '^wezterm-icon-(.+)\.ico$') {
              $icoPart = $matches[1]
          }
          else {
              Write-Warning "Skipping unexpected icon file name format: $iconFileName"
              return
          }

          # New folder name combining version and icon part
          $newFolderName = "WezTerm-windows-$icoPart-$wezterm_version"

          Write-Host "Processing icon '$icoPart'..."

          Copy-Item -Path $extractedFolder -Destination $newFolderName -Recurse

          $exePath = Join-Path -Path $newFolderName -ChildPath "wezterm-gui.exe"
          $iconPath = Join-Path -Path $altIconsDir -ChildPath $iconFileName

          Write-Host "Patching executable icon using rcedit: $exePath with icon $iconPath"
          ~\scoop\shims\rcedit.exe $exePath --set-icon $iconPath

          Write-Host "Done processing $icoPart."

          echo "icon_name=$icoPart" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          echo "folder_name=$newFolderName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

          # Clean up: Remove the original zip and extracted folder, keeping only the new zip files
          Write-Host "Cleaning up original files..."
          Remove-Item -Recurse -Force -Path $extractedFolder

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.zip-windows-package.outputs.folder_name }}.zip
          path: ${{ steps.zip-windows-package.outputs.folder_name }}
          retention-days: 2

